// <auto-generated />
using System;
using CheckInspecao.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CheckInspecao.Repository.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20220131135014_v1.1")]
    partial class v11
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.13");

            modelBuilder.Entity("CheckInspecao.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LoginId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("CheckInspecao.Models.DocumentoInspecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UsuarioInspecaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("UsuarioInspecaoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("CheckInspecao.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cep")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cidade")
                        .HasColumnType("TEXT");

                    b.Property<string>("Cnpj")
                        .HasColumnType("TEXT");

                    b.Property<string>("Complemento")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("TEXT");

                    b.Property<string>("Uf")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("CheckInspecao.Models.Foto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Arquivo")
                        .HasColumnType("BLOB");

                    b.Property<int?>("ItemInspecaoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemInspecaoId");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("CheckInspecao.Models.Grupo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("CheckInspecao.Models.ItemDocumentoInspecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DocumentoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Nao")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NaoObservado")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("NaoSeAplica")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Observacao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Sim")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DocumentoId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemDocumentoInspecao");
                });

            modelBuilder.Entity("CheckInspecao.Models.ItemInspecao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Classificacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("GrupoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("ItensInspecao");
                });

            modelBuilder.Entity("CheckInspecao.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<string>("UsuarioLogin")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("CheckInspecao.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Assinatura")
                        .HasColumnType("BLOB");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("FotoPerfil")
                        .HasColumnType("BLOB");

                    b.Property<int?>("LoginId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sexo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LoginId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CheckInspecao.Models.UsuarioEmpresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmpresaId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuariosEmpresas");
                });

            modelBuilder.Entity("CheckInspecao.Models.Cliente", b =>
                {
                    b.HasOne("CheckInspecao.Models.Login", null)
                        .WithMany("Clientes")
                        .HasForeignKey("LoginId");
                });

            modelBuilder.Entity("CheckInspecao.Models.DocumentoInspecao", b =>
                {
                    b.HasOne("CheckInspecao.Models.Cliente", "Cliente")
                        .WithMany("Documentos")
                        .HasForeignKey("ClienteId");

                    b.HasOne("CheckInspecao.Models.Usuario", "UsuarioInspecao")
                        .WithMany()
                        .HasForeignKey("UsuarioInspecaoId");

                    b.Navigation("Cliente");

                    b.Navigation("UsuarioInspecao");
                });

            modelBuilder.Entity("CheckInspecao.Models.Foto", b =>
                {
                    b.HasOne("CheckInspecao.Models.ItemDocumentoInspecao", "ItemInspecao")
                        .WithMany("Fotos")
                        .HasForeignKey("ItemInspecaoId");

                    b.Navigation("ItemInspecao");
                });

            modelBuilder.Entity("CheckInspecao.Models.ItemDocumentoInspecao", b =>
                {
                    b.HasOne("CheckInspecao.Models.DocumentoInspecao", "Documento")
                        .WithMany("Itens")
                        .HasForeignKey("DocumentoId");

                    b.HasOne("CheckInspecao.Models.ItemInspecao", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.Navigation("Documento");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("CheckInspecao.Models.ItemInspecao", b =>
                {
                    b.HasOne("CheckInspecao.Models.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId");

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("CheckInspecao.Models.Usuario", b =>
                {
                    b.HasOne("CheckInspecao.Models.Login", null)
                        .WithMany("Usuarios")
                        .HasForeignKey("LoginId");
                });

            modelBuilder.Entity("CheckInspecao.Models.UsuarioEmpresa", b =>
                {
                    b.HasOne("CheckInspecao.Models.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CheckInspecao.Models.Usuario", "Usuario")
                        .WithMany("Empresas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CheckInspecao.Models.Cliente", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("CheckInspecao.Models.DocumentoInspecao", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("CheckInspecao.Models.Empresa", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CheckInspecao.Models.ItemDocumentoInspecao", b =>
                {
                    b.Navigation("Fotos");
                });

            modelBuilder.Entity("CheckInspecao.Models.Login", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("CheckInspecao.Models.Usuario", b =>
                {
                    b.Navigation("Empresas");
                });
#pragma warning restore 612, 618
        }
    }
}
